/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.unesp.rc.classificaclientes.gui;

import br.unesp.rc.classificaclientes.model.Suporte;
import br.unesp.rc.classificaclientes.service.ClienteCidadeService;
import br.unesp.rc.classificaclientes.service.ContatoService;
import br.unesp.rc.classificaclientes.service.PessoaService;
import br.unesp.rc.classificaclientes.service.ServiceFactory;
import br.unesp.rc.classificaclientes.service.SuporteService;
import java.text.ParseException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Random;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author PICHAU
 */
public class GerarSuporte extends javax.swing.JInternalFrame {

    /**
     * Creates new form GerarSuporte
     */
    public GerarSuporte() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 204));
        jButton2.setText("Gerar Suporte");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(95, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void CadastrarSuporte(long idPessoa, java.sql.Date data, String descricao,
            String hora, long idCliente, long idTipo) throws ParseException {
        SuporteService entity4 = ServiceFactory.getSuporteService();

        Calendar cal;
        String d;
        long id;
        boolean b;
        id = entity4.recuperaUltimoId();
        if (id == -1) {
            id = 1;
        } else {
            id++;
        }
        /*seta id de ocorrencia*/
        Suporte suporte = new Suporte(id);

        /*seta cliente*/
        suporte.setIdPessoa(idPessoa);

        /*seta data*/
        suporte.setDataSuporte(data);

        /*seta descrição*/
        suporte.setDescricaoOcorrido(descricao);

        /*seta hora*/
        suporte.setHora(hora);

        /*seta bairro*/
        suporte.setIdClienteCidade(idCliente);

        /*seta tipo*/
        suporte.setIdTipoSuporte(idTipo);

        /*salva ocorrencia*/
        b = entity4.save(suporte);
        if (b == false) {
            System.out.println("Erro: Ocorrencia não foi cadastrada ");
        }

    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        ClienteCidadeService entity = ServiceFactory.getClienteCidadeService();

        long IdCliente;

        java.util.Date d = new java.util.Date();
        d.getTime();
        Calendar cal = new GregorianCalendar();
        cal.setTime(d);
        java.sql.Date data = new java.sql.Date(cal.getTimeInMillis());

        IdCliente = entity.recuperaUltimoId();
        System.out.println(IdCliente);

        Random aleatorio = new Random();
        int cliente, tipo;

        //cliente = aleatorio.nextInt(  (int) IdCliente ) +1;
        for (int i = 0; i < 100; i++) {
            cliente = aleatorio.nextInt((int) IdCliente) + 1;
            try {
                System.out.println("-------------");

                tipo = aleatorio.nextInt(16) + 1;

                System.out.println(cliente);
                System.out.println(tipo);

                CadastrarSuporte(1, data, "Gerado Aleatoriamente", "15", (long) cliente, (long) tipo);
                //JOptionPane.showMessageDialog(null, "Suporte Cadastrado!");
            } catch (ParseException ex) {
                Logger.getLogger(GerarSuporte.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Erro!");
            }

        }
 

        JOptionPane.showMessageDialog(null, "Suporte Cadastrado!");
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables
}
